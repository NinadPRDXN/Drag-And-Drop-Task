{"version":3,"sources":["components/styledComponents.js","components/Blogs.js","components/DroppableArea.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Heading2","h2","DragDrop","PostList","ul","DroppedItemList","Close","span","Blogs","posts","droppableId","isDropDisabled","provided","droppableProps","ref","innerRef","map","index","id","title","draggableId","snapshot","draggableProps","dragHandleProps","isDragging","DroppableArea","droppedItems","del","onClick","App","useState","updatePosts","setDropItems","useEffect","axios","get","then","response","data","onDragEnd","result","destination","source","splice","reorderedItem","slice","dataToTransfer","oldData","uuid","filter","val","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbca0372.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 1350px;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const Heading2 = styled.h2`\r\n    margin: 20px 0;\r\n    color: #422680;\r\n    text-align: center;\r\n`;\r\n\r\nexport const DragDrop = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    ul {\r\n        box-sizing: border-box;\r\n        width: 40%;\r\n        height: 500px;\r\n        padding: 10px;\r\n        border-radius: 10px;\r\n        overflow-y: auto;\r\n        background-color: #e7d9ea;\r\n        list-style-type: none;\r\n        text-transform: capitalize;\r\n\r\n        li {\r\n            box-sizing: border-box;\r\n            padding: 15px;\r\n            margin-bottom: 2px;\r\n            border-radius: 10px;\r\n        }\r\n    }\r\n    @media (max-width: 888px) {\r\n        flex-direction: column;\r\n\r\n        ul {\r\n            width: 100%;\r\n            margin-top: 10px;\r\n        }\r\n\r\n        ul:nth-child(1) {\r\n            height: 150px;\r\n            display: flex;\r\n            overflow-x: auto;\r\n\r\n            li {\r\n                min-width: 100px;\r\n                margin-right: 10px;\r\n                font-size: 10px;\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const PostList = styled.ul`\r\n    li {\r\n        background-color: #422680;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nexport const DroppedItemList = styled.ul`\r\n    li {\r\n        border: 1px solid #000000;\r\n        position: relative;\r\n        background-color: #e7d9ea;\r\n    }\r\n`;\r\n\r\nexport const Close = styled.span`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 10px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n`;","import React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { PostList } from './styledComponents';\r\n\r\nconst Blogs = ({ posts }) => {\r\n    return (\r\n        <>\r\n            <Droppable droppableId=\"blogs\" isDropDisabled={true}>\r\n                {\r\n                    (provided) => {\r\n                        return (\r\n                            <PostList {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {posts.map(({id, title}, index) => {\r\n                                    return (\r\n                                            <Draggable \r\n                                                key={id} \r\n                                                draggableId={`${id}`} \r\n                                                index={index}\r\n                                            >\r\n                                                {(provided, snapshot) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <li \r\n                                                                ref={provided.innerRef} \r\n                                                                {...provided.draggableProps} \r\n                                                                {...provided.dragHandleProps}\r\n                                                            >\r\n                                                                {title}\r\n                                                            </li>\r\n                                                            {snapshot.isDragging &&\r\n                                                            (<li>{title}</li>)}\r\n                                                        </>\r\n                                                )}}\r\n                                            </Draggable>\r\n                                        )\r\n                                })}\r\n                            </PostList>\r\n                        );\r\n                    }\r\n                }\r\n            </Droppable>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { DroppedItemList, Close } from './styledComponents';\r\n\r\nconst DroppableArea = ({ droppedItems, del }) => {\r\n    return (\r\n        <>\r\n            <Droppable droppableId=\"droppedItems\">\r\n                {\r\n                    (provided) => {\r\n                        return (\r\n                            <DroppedItemList \r\n                                {...provided.droppableProps} \r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {\r\n                                    droppedItems.map(({id, title}, index) => {\r\n                                        return (\r\n                                            <Draggable \r\n                                                key={id} \r\n                                                draggableId={`${id}`} \r\n                                                index={index}\r\n                                            >\r\n                                                {(provided) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <li \r\n                                                                ref={provided.innerRef} \r\n                                                                {...provided.draggableProps} \r\n                                                                {...provided.dragHandleProps}\r\n                                                            >\r\n                                                                {title}\r\n                                                                <Close \r\n                                                                    onClick={ () => del(id)}\r\n                                                                >\r\n                                                                    &times;\r\n                                                                </Close>\r\n                                                            </li>\r\n                                                        </>\r\n                                                )}}\r\n                                            </Draggable>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </DroppedItemList>\r\n                        )\r\n                    }\r\n                }\r\n            </Droppable>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DroppableArea;\r\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Wrapper, Heading2, DragDrop } from './components/styledComponents';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Blogs from './components/Blogs';\nimport DroppableArea from './components/DroppableArea';\nimport uuid from 'react-uuid';\n\nconst App = () => {\n  const [posts, updatePosts] = useState([]);\n  const [droppedItems, setDropItems] = useState([]);\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/posts')\n      .then(response => {\n        updatePosts(response.data);\n      })\n  }, []);\n\n  const handleOnDragEnd = (result) => {\n    const {destination, source} = result;\n        if ( !destination ) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const [reorderedItem] = droppedItems.splice(source.index, 1);\n            droppedItems.splice(destination.index, 0, reorderedItem);\n        \n            setDropItems(droppedItems);\n        } else {\n            const [ dataToTransfer ] =  posts.slice(source.index, (source.index + 1));\n            setDropItems((oldData) => {\n                return [...oldData, { id: uuid(), title: dataToTransfer.title }];\n            });\n        }\n  }\n\n  const del = (id) => {\n    setDropItems((oldData) => {\n        return oldData.filter((val) => {\n            return val.id !== id;\n        });\n    });\n  }\n\n  return (\n    <>\n      <Wrapper>\n        <Heading2>-Drag and Drop-</Heading2>\n        <DragDrop>\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Blogs posts={posts}/>\n            <DroppableArea droppedItems={droppedItems} del={del} />\n          </DragDropContext>\n        </DragDrop>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}